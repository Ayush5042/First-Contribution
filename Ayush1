public class WildcardMatching {

    public static boolean isMatch(String s, String p) {
        int sLength = s.length();
        int pLength = p.length();

        // Create a 2D array to store the matching results
        boolean[][] dp = new boolean[sLength + 1][pLength + 1];
        dp[0][0] = true;

        // Handle patterns with '*' at the beginning
        for (int j = 1; j <= pLength; j++) {
            if (p.charAt(j - 1) == '*') {
                dp[0][j] = dp[0][j - 1];
            }
        }

        // Dynamic programming to fill the dp array
        for (int i = 1; i <= sLength; i++) {
            for (int j = 1; j <= pLength; j++) {
                if (p.charAt(j - 1) == s.charAt(i - 1) || p.charAt(j - 1) == '?') {
                    dp[i][j] = dp[i - 1][j - 1];
                } else if (p.charAt(j - 1) == '*') {
                    dp[i][j] = dp[i][j - 1] || dp[i - 1][j];
                }
            }
        }

        return dp[sLength][pLength];
    }

    public static void main(String[] args) {
        String s1 = "aa";
        String p1 = "a";
        System.out.println(isMatch(s1, p1));  // Output: false

        String s2 = "adceb";
        String p2 = "*a*b";
        System.out.println(isMatch(s2, p2));  // Output: true

        String s3 = "acdcb";
        String p3 = "a*c?b";
        System.out.println(isMatch(s3, p3));  // Output: false
    }
}
